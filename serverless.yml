# https://github.com/lalcebo/json-schema/blob/master/serverless/reference.json
service: twitter-bot-api
frameworkVersion: '3'
useDotenv: true
plugins:
  # - serverless-webpack
  - serverless-prune-plugin
  - serverless-dotenv-plugin
  - serverless-deployment-bucket

custom:
  prune:
    automatic: true
    number: 4

  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: true # Node modules configuration for packaging
    keepOutputDirectory: true
    packager: 'npm' # Packager that will be used to package your external modules
    excludeFiles:
      - src/**/*.spec.ts # Provide a glob for files to ignore
      - test

  appName: twitter-bot
  stage: ${opt:stage, 'development'}
  region: ${opt:region, 'us-east-1'}
  10sCron: cron(*/10 * * * * *)
  15sCron: cron(*/15 * * * * *)

provider:
  name: aws
  stage: ${self:custom.stage}
  runtime: nodejs18.x
  region: us-east-1
  architecture: arm64
  deploymentBucket:
    name: ${self:service}
  deploymentPrefix: ${self:custom.appName}

  # Optional CloudFormation tags to apply to APIs and functions
  tags:
    appName: ${self:custom.appName}

  # Optional CloudFormation tags to apply to the stack
  stackTags:
    appName: ${self:custom.appName}

  # httpApi:
  #   # https://www.serverless.com/framework/docs/providers/aws/events/http-api
  #   shouldStartNameWithService: true
  #   cors:
  #     allowedOrigins: "*"
  #     allowedHeaders: "*"
  #     allowedMethods: "*"
  #     allowCredentials: false

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_ENV: ${self:custom.stage}
    NODE_OPTIONS: '--enable-source-maps'

  # Below asigned lambda function the permission use other AWS services
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:us-east-1:*:*'

# https://github.com/mnapoli/externals/blob/master/serverless.yml
functions:
  main-handler:
    name: ${self:service}-${self:custom.stage}
    handler: serverless.handler
    timeout: 15
    events:
      # - httpApi: "*"
      # - httpApi:
      #     path: /{proxy+}
      #     method: any

      - schedule:
          rate: ${self:custom.10sCron}
          input:
            # key1: value1
            # key2: value2
            stageParams:
              stage: ${self:custom.stage}
